<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="PenjinTwoTrenkiSoftGPU" />
		<Option pch_mode="2" />
		<Option compiler="linux" />
		<Build>
			<Target title="Lin Debug">
				<Option output="lib/Linux/PenjinTwoTrenkiSoftGPUD" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Linux/Debug" />
				<Option type="3" />
				<Option compiler="linux" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Compiler>
					<Add option="-g" />
					<Add option="-fPIC" />
				</Compiler>
				<Linker>
					<Add directory="$(#PenjinTwo.lib)/Linux" />
				</Linker>
			</Target>
			<Target title="Lin Release">
				<Option output="lib/Linux/PenjinTwoTrenkiSoftGPU" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Linux/Release/" />
				<Option type="3" />
				<Option compiler="linux" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Compiler>
					<Add option="-O2" />
					<Add option="-fPIC" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add directory="$(#PenjinTwo.lib)/Linux" />
				</Linker>
			</Target>
			<Target title="Pandora Debug">
				<Option output="lib/Pandora/PenjinTwoTrenkiSoftGPUD" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/PandoraDebug" />
				<Option type="3" />
				<Option compiler="pandora" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Compiler>
					<Add option="-g" />
					<Add option="-fPIC" />
				</Compiler>
				<Linker>
					<Add directory="$(#PenjinTwo.lib)/Linux" />
				</Linker>
			</Target>
			<Target title="Pandora Release">
				<Option output="lib/Pandora/PenjinTwoTrenkiSoftGPU" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Pandora/Release/" />
				<Option type="3" />
				<Option compiler="pandora" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Compiler>
					<Add option="-mcpu=cortex-a8" />
					<Add option="-mfpu=neon" />
					<Add option="-msoft-float" />
					<Add option="-fexpensive-optimizations" />
					<Add option="-O3" />
					<Add option="-fPIC" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add directory="$(#PenjinTwo.lib)/Linux" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
			<Add option="-fexceptions" />
			<Add directory="$(#PenjinTwo.include)" />
		</Compiler>
		<Linker>
			<Add directory="$(#PenjinTwo.lib)" />
		</Linker>
		<Unit filename="include/trenki/fixedpoint/fixed_class.h" />
		<Unit filename="include/trenki/fixedpoint/fixed_func.cpp" />
		<Unit filename="include/trenki/fixedpoint/fixed_func.h" />
		<Unit filename="include/trenki/fixedpoint/fixsintab.h" />
		<Unit filename="include/trenki/fixedpoint/stdint.h" />
		<Unit filename="include/trenki/renderer/duffsdevice.h" />
		<Unit filename="include/trenki/renderer/geometry_processor.cpp" />
		<Unit filename="include/trenki/renderer/geometry_processor.h" />
		<Unit filename="include/trenki/renderer/irasterizer.h" />
		<Unit filename="include/trenki/renderer/rasterizer_subdivaffine.h" />
		<Unit filename="include/trenki/renderer/rasterizer_tsbase.h" />
		<Unit filename="include/trenki/renderer/span.h" />
		<Unit filename="include/trenki/renderer/stepmacros.h" />
		<Unit filename="include/trenki/renderer/stepmacros_undef.h" />
		<Unit filename="include/trenki/renderer/util.h" />
		<Unit filename="include/trenki/renderer/vertex_processor.h" />
		<Unit filename="include/trenki/vector_math/vector_math.h" />
		<Extensions>
			<envvars />
			<code_completion />
			<lib_finder disable_auto="1" />
			<debugger />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
